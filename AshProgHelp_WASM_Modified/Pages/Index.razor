@page "/"

@inject HttpClient httpclient


@if (Angajati == null)
{
    <p>Loaging...</p>
}

else
{
    <table class="table">
        <thead>
            <tr>
                <th>Cod Angajat</th>
                <th>Full Name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var angajat in Angajati.Data)
            {
                <tr>
                    <td>@angajat.CodAngajat</td>
                    <td>@angajat.FullName</td>
                </tr>
            }
        </tbody>
    </table>

    <PaginationComp TClass="Pagination<Angajat>"
                TotalPages="totalPages"
                TotalRecords="totalRecords"
                CurrentPage="curPage"
                PageSize="pageSize"
                OnSelectPage="SelectCurrentPage"
                OnSelectPageSize="SelectPageSize" />
}

@code {
    public Pagination<Angajat>? Angajati;

    int totalPages;
    int totalRecords;
    int curPage;
    int pageSize;        // number of pages

    protected override async Task OnInitializedAsync()
    {
        curPage = 1;
        pageSize = 15;

        Angajati = await httpclient.GetFromJsonAsync<Pagination<Angajat>>(Endpoints.URLGetAllAngajati(curPage, pageSize));

        totalPages = Angajati.TotalPages;
        totalRecords = Angajati.TotalCount;
    }

    public async Task SelectCurrentPage(int currentPage)
    {
        curPage = currentPage;
        pageSize = 15;

        Angajati = await httpclient.GetFromJsonAsync<Pagination<Angajat>>(Endpoints.URLGetAllAngajati(curPage, pageSize));

        totalPages = Angajati.TotalPages;
        totalRecords = Angajati.TotalCount;
    }

    public async Task SelectPageSize(int pagesize)
    {
        pageSize = pagesize;

        Angajati = await httpclient.GetFromJsonAsync<Pagination<Angajat>>(Endpoints.URLGetAllAngajati(curPage, pageSize));

        totalPages = Angajati.TotalPages;
        totalRecords = Angajati.TotalCount;
    }
}