@page "/"

@inject HttpClient httpclient

@if (AngajatiPagination == null)
{
    <p>Loading...</p>
}

else
{
    <table class="table table-sm table-bordered table-striped">
        <thead>
            <tr>
                <th>CodAngajat</th>
                <th>Full Name</th>
            </tr>
        </thead>

        <tbody>
            @foreach (var angajat in AngajatiPagination.Data)
            {
                <tr>
                    <td>@angajat.CodAngajat</td>
                    <td>@angajat.FullName</td>
                </tr>
            }
        </tbody>

        <tfoot>
            <PaginationComp Pagination = AngajatiPagination.Data"
                            OnSelectedPage = "SelectCurrentPage"
                            OnChangePageSize="SelectPageSize">
            </PaginationComp>
        </tfoot>
    </table>
}


@code {
    private List<Angajat> Angajati;
    private Pagination<Angajat>? AngajatiPagination;

    private int currentPage;
    private int pageSize;

    protected override async Task OnInitializedAsync()
    {
        currentPage = 1;
        pageSize = 10;
     
        AngajatiPagination = await httpclient.GetFromJsonAsync<Pagination<Angajat>>
        (Endpoints.UrlGetAllAngajati(currentPage, pageSize));

        Angajati = AngajatiPagination.Data;
    }

    private async Task SelectCurrentPage(Pagination<Angajat> pagination)
    {
        AngajatiPagination = await httpclient.GetFromJsonAsync<Pagination<Angajat>>
        (Endpoints.UrlGetAllAngajati(currentPage, pageSize));
    }

    private async Task SelectPageSize(Pagination<Angajat>? pagination)
    {      
        AngajatiPagination = await httpclient.GetFromJsonAsync<Pagination<Angajat>>
        (Endpoints.UrlGetAllAngajati(pagination.CurrentPageNumber, pagination.PageSize)); 
    }
}